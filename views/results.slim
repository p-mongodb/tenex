p
  a href="/eg/#{@build.project_id}/versions/#{@build.version_id}/builds/#{@build.id}/log" Log
  '
  a href="/eg/#{@build.project_id}/versions/#{@build.version_id}" EG build
  - if @cached_build
    '
    a href="https://evergreen.mongodb.com/build/#{@cached_build.id}" @ Evergreen

- if @result.summary[:failure_count] > 0
  h2 #{@result.render_failure_count} [#{@branch_name}]
  
  - if @local_test_command
    p
      ' Local test command:
      pre= @local_test_command
      
      ' Failing tests only:
      pre= @local_failed_test_command
  
  ul
    - @result.failed_files.each do |file|
      li
        a href="##{file[:file_path].gsub(/\W/, '-')}" #{file[:file_path]}
        '
        | (#{file[:failure_count]})
  
  - prev_path = nil
  - @result.failed_results.each_with_index do |failure, index|
    - if prev_path != failure[:file_path]
      a name=failure[:file_path].gsub(/\W/, '-')
      - prev_path = failure[:file_path]
    div
      p
        b= "#{index+1})"
        '
        b= failure[:id]
        '
        ' @ #{failure[:started_at]}
      p= failure[:description]
      pre
        = failure[:failure][:class]
        ' :
        == Ansi::To::Html.new(CGI.escapeHTML(failure[:failure][:message])).to_html.gsub("\n", '<br>')
      - if failure[:failure][:backtrace]
        pre
          = failure[:failure][:backtrace].join("\n")
      - else
        p No backtrace for this failure.

      - if failure[:sdam_log_entries] && !failure[:sdam_log_entries].empty?
        p SDAM log:
        = sdam_log_entries(failure)

- if @result.summary[:errors_outside_of_examples_count] > 0
  h2 #{@result.summary[:errors_outside_of_examples_count]} errors outside of examples
  
  - @result.messages.each_with_index do |message, index|
    div
      p
        b= "#{index+1})"
      pre== Ansi::To::Html.new(CGI.escapeHTML(message)).to_html.gsub("\n", '<br>')

h2
  ' Slowest #{@result.slowest_examples.length} examples
  small
    '(#{Taw.time_ago_in_words(Time.now - @result.slowest_total_time, approx: 2)}
    ' out of
    ' #{Taw.time_ago_in_words(Time.now - @result.summary[:duration], approx: 2)})
ul
  - @result.slowest_examples[0..19].each do |result|
    li
      | #{result[:id]} #{result[:description]} (<b>#{'%.1f' % result[:time]} s</b>)
      = sdam_log_entries(result)

- if !@filtered && @result.respond_to?(:always_skipped_examples) && (results = @result.always_skipped_examples) && !results.empty?
  h2 Always skipped
  ul
    - @result.always_skipped_examples.each do |result|
      li= "#{result[:id]}: #{result[:pending_messages]}"

- if @raw_artifact_url
  p
    a href=@raw_artifact_url Raw JSON (uncompressed)

- if @build.artifacts.any?
  h2 Artifacts
  - @build.artifacts.each_with_index do |artifact, index|
    - if index > 0
      '
      ' &middot;
    a href=artifact.url = artifact.name
