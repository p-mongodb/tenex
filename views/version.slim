style
  |
    td { padding: 5px; margin: 0; border: 1px soid #eee; }
    tr { padding: 0; }
    tr:nth-child(even) { background: #eee; }
    tr.passed { background: #cfc; }
    tr.failed { background: #fcc; }
    tr.pending { background: #ffc; }

p
  a href="/eg/#{@project_id}" #{@project_id}
  '
  a href="https://evergreen.mongodb.com/version/#{@version.id}" @ Evergreen
  '
  a href="/eg/#{@project_id}/versions/#{@version.id}/restart-failed" Restart failed
  - if @newest_version
    '
    a href="/eg/#{@project_id}/versions/#{@newest_version.id}" Newest version
  - if @builds.any? { |build| !build.finished? }
    '
    ' Bump priority to:
    a href="/eg/#{@project_id}/versions/#{@version.id}/bump?priority=40" 40
    '
    a href="/eg/#{@project_id}/versions/#{@version.id}/bump?priority=70" 70
    '
    a href="/eg/#{@project_id}/versions/#{@version.id}/bump?priority=90" 90
    '
    a href="/eg/#{@project_id}/versions/#{@version.id}/bump?priority=99" 99
    '
    a href="/eg/#{@project_id}/versions/#{@version.id}/bump?priority=100" 100
  '
  a href="/eg/#{@project_id}/versions/#{@version.id}/abort" Abort
  '
  - if @version.patch?
    a href="/eg/#{@project_id}/versions/latest-patch" Latest patch
  - else
    a href="/eg/#{@project_id}/versions/latest" Latest

  - if @project_id =~ /driver-toolchain/
    '
    a href="/eg/#{@project_id}/versions/#{@version.id}/toolchain-urls" Toolchain URLs

table
  - @builds.each do |build|
    tr class="#{{'failure' => 'failed', 'failed' => 'failed', 'success' => 'passed', 'started' => 'pending'}[build.status]}"
      td= build.build_variant
      td
        = build.status
        - unless build.activated?
          '
          ' (X)
        = build_timing(build)
      td
        - if build.tasks.length == 1
          - task = build.tasks.first
          a href="https://evergreen.mongodb.com/task/#{task.id}" Go
          '
          a href="/eg/#{@project_id}/versions/#{@version.id}/builds/#{build.id}/log" Log
          '
          a href="/eg/#{@project_id}/versions/#{@version.id}/builds/#{build.id}/artifact-logs" Server Logs
          - if task.failed? && build.artifact?('rspec.json')
            '
            a href="/eg/#{Addressable::URI.encode(@project_id)}/versions/#{@version.id}/results/#{build.id}"
              i.fa.fa-puzzle-piece title='Results'
          - if task.waiting?
            '
            a href="/eg/#{Addressable::URI.encode(@project_id)}/versions/#{@version.id}/tasks/#{task.id}/bump" Bump
            '
            | (p=#{task.priority})
          - if task.failed?
            '
            a href="/eg/#{Addressable::URI.encode(@project_id)}/versions/#{@version.id}/tasks/#{task.id}/restart"
              i.fa.fa-repeat title='Restart'
        - else
          ul
            - build.tasks.each do |task|
              li class="#{{'failure' => 'failed', 'success' => 'passed', 'started' => 'pending', 'undispatched' => 'pending'}[task.status]}"
                = task.display_name
                '
                = task.status
                '
                a href="https://evergreen.mongodb.com/task/#{task.id}" Go
                '
                a href="/eg/#{@project_id}/versions/#{@version.id}/builds/#{build.id}/tasks/#{task.id}/log" Log
                - if task.failed? && (false&&@version.have_rspec_json?) && !task.top_level?
                  '
                  a href="/eg/#{Addressable::URI.encode(@project_id)}/versions/#{@version.id}/results/#{task.builds.first.id}"
                    i.fa.fa-puzzle-piece title='Results'
                - if task.waiting?
                  '
                  a href="/eg/#{Addressable::URI.encode(@project_id)}/versions/#{@version.id}/tasks/#{task.id}/bump" Bump
                  '
                  | (p=#{task.priority})
                '
                a href="/eg/#{@project_id}/versions/#{@version.id}/builds/#{build.id}/tasks/#{task.id}/restart" Restart
                - if task.artifacts.any?
                  div
                    ' Artifacts:
                    - task.artifacts.each do |artifact|
                      a href=artifact.url = artifact.name
                      '
      td
        - if build.tasks.length == 1
          - task = build.tasks.first
          = short_task_runtime(task)

p Created: #{Taw.time_ago_in_words(@version.created_at, approx: 2)} ago
