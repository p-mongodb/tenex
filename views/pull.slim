h2
  a href=@pull['html_url'] ##{@pull['number']}: #{@pull['title']}
  '
  span by #{@pull['user']['login']}
  '
  code= @pull.head_branch_name

p
  a href="https://github.com/#{@pull.repo_full_name}/pull/#{@pull['number']}/files" Diff
  '
  - if @pull.approved?
    | Approved
  - elsif @pull.review_requested?
    | Review requested (
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/request-review" again
    | ,
    '
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/approve" approve
    | )
  - else
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/request-review" Request review
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/reword" Reword
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/rebase" Rebase
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/edit-msg" Edit commit msg
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/edit-pr" Edit PR
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/retitle-commit" Retitle from commit
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/retitle-jira" Retitle from Jira
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/unresolve" Unresolve comments

p
  - if (@pull.jira_ticket_number rescue nil)
    '
    a href="https://jira.mongodb.org/browse/#{@pull.jira_issue_key!}" Jira
    '
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/in-progress" In progress
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/merge" Merge
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/close" Close
  - unless @pull.label_names.include?('oleg-check') || @pull.label_names.include?('oleg-done')
    '
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/smart-add-label/oleg-check" +oleg-check
  - unless @pull.label_names.include?('oleg-done')
    '
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/smart-add-label/oleg-done" +oleg-done

p
  - if (eg_status = @pull.top_evergreen_status) && @pull.evergreen_version_id
    a href="/eg/#{escape_uri(@pull.evergreen_project_id)}/versions/#{@pull.evergreen_version_id}" Evergreen build
    '
    - if str = eg_status.build_count_str
      = "(#{str}) "
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/restart-failed" Restart failed
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/restart-all" Restart all
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/mri-results" MRI results
  '
  | (
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/mri-results?failed=1" failed
  | )
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/jruby-results" JRuby results
  - if eg_status&.pending?
    '
    ' Bump priority to:
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/bump?priority=40" 40
    '
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/bump?priority=70" 70
    '
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/bump?priority=90" 90
    '
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/bump?priority=99" 99
    '
    a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/bump?priority=100" 100
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/submit-patch" Submit as EG patch
  - if @pull.patch
    '
    a href="/eg/#{@pull.patch.eg_project_id}/patches/#{@pull.patch.id}" EG patch build
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/eg-validate" Validate EG config
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/perf" Perf
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/eg-perf" EG Perf

- if @pull.repo_full_name == 'mongodb/mongo-ruby-driver' && @category_values
  table.status-table
    tr
      td Server
      td Topology
      td Auth
      - @category_values['ruby'].each do |ruby_version|
        td= ruby_version
    - @category_values['mongodb-version'].each do |mongodb_version|
      - @category_values['topology'].each do |topology|
        - @category_values['auth-and-ssl'].each do |auth|
          - if map2 = @table[mongodb_version]&.[](topology)&.[](auth)
            tr
              td= mongodb_version
              td= topology
              td= auth
              - @category_values['ruby'].each do |ruby_version|
                td
                  - statuses = map2[ruby_version]
                  - if statuses
                    - statuses.each do |label, status|
                      div class=status.normalized_status
                        ' #{label}
                        a href=status['target_url']
                          i.fa.fa-share title='Go'
                        '
                        - if status.log_url
                          - if status.failed?
                            - target_url = "#{status.log_url}#first-failure"
                          - else
                            - target_url = status.log_url
                          a href=target_url
                            i.fa.fa-flask title='Log'
                          '
                          - if status.failed? && status.all_log_url
                            a href=status.all_log_url
                              ' A
                          '
                          a href=status.server_logs_url
                            i.fa.fa-database title='Server Logs'
                        '
                        '
                        - if status.restart_url
                          a href=status.restart_url
                            i.fa.fa-repeat title='Restart'
                        - if status.finished? && @pull.have_rspec_json? && !status.top_level?
                          '
                          a href="/eg/#{escape_uri(@pull.evergreen_project_id)}/versions/#{@pull.evergreen_version_id}/results/#{status.build_id}?branch=#{@pull.head_branch_name}"
                            i.fa.fa-bomb title='Results'

table.status-table
  - @untaken_statuses.each do |status|
    tr class=status.normalized_status
      td
        = status['context']
        - if status['description']
          div= status['description']
      td
        a href=status['target_url'] Go
      - if status.build_id
        td
          - if status.failed?
            - if status.log_url
              a href="#{status.log_url}#first-failure" Log
          - else
            - if status.log_url
              a href=status.log_url Log
        td
          - if status.restart_url
            a href=status.restart_url Restart
        - if status.finished? && @pull.have_rspec_json? && !status.top_level?
          td
            a href="/eg/#{escape_uri(@pull.evergreen_project_id)}/versions/#{@pull.evergreen_version_id}/results/#{status.build_id}?branch=#{@pull.head_branch_name}"
              | Results
      - if status.eg_unauthorized?
        td
          a href=status.eg_authorize_url Authorize
    - if status['context'] == 'continuous-integration/travis-ci/pr'
      - @pull.travis_statuses.each do |status|
        tr class="#{status.state}"
          td
            = status.context
          td
            a href=status.target_url Go
          td
            - if status.html_log_url
              a href=status.html_log_url Log
          td
            - if status.restart_url
              a href=status.restart_url Restart

small
  ' Legend:
    AS=with ActiveSupport;
    BM=BSON master;
    Bm=BSON min;
    E=client-side encryption;
    EA=enterprise auth;
    K=Kerberos;
    L=lint;
    mmap=MMAPv1;
    RR=legacy retryable reads;
    RW=legacy retryable writes;
    SM=single mongos;
    Z=compression.
